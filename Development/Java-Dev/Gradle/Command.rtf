Gradle offers a vast array of commands to manage your build process. Here are some of the most commonly used ones:

Core Commands - 
gradle build: Compiles and assembles the project.
gradle clean: Deletes the build directory.
gradle test: Executes unit tests.
gradle run: Runs the main class (if defined).
gradle jar: Creates a JAR file.
gradle war: Creates a WAR file (for web applications).
gradle tasks: Lists all available tasks.
gradle help: Provides help for a specific task.
gradle dependencies: Shows project dependencies.

Project Initialization and Management - 
gradle init: Initializes a new Gradle project.
gradle wrapper: Creates Gradle wrapper scripts (gradlew, gradlew.bat).

Advanced Commands - 
gradle assemble: Assembles the project without testing.
gradle check: Runs checks (like tests, static analysis).
gradle install: Installs the project.
gradle publish: Publishes the project to a repository.
gradle properties: Displays project properties.
gradle --info: Displays detailed build information.
